<?php
require ("DBase.php");
$db = new DBase();

$sql = "SELECT H0.IDH, H0.PRIX, H0.DISTANCE, H0.NBETOILES, TRUNCATE(IFNULL(DEN/(DEN+DEP),1),2) SCORE
        FROM (SELECT HS.IDH, HS.PRIX, HS.DISTANCE, HS.NBETOILES, (SQRT(POWER(PRIX-MIP,2)+POWER(DISTANCE-MID,2)+POWER(NBETOILES-MINB,2))) DEP, (SQRT(POWER(PRIX-MAP,2)+POWER(DISTANCE-MAD,2)+POWER(NBETOILES-MANB,2))) DEN
            FROM (SELECT IDH, PRIX* :WPRIX PRIX, DISTANCE* :WDISTANCE DISTANCE, NBETOILES* :WNBETOILES NBETOILES
                FROM HOTEL H1
                WHERE NOT EXISTS ( SELECT *
                   FROM HOTEL H2
                   WHERE (H2.PRIX <= H1.PRIX AND H2.DISTANCE <= H1.DISTANCE AND H2.NBETOILES >= H1.NBETOILES)
                   AND (H2.PRIX < H1.PRIX OR H2.DISTANCE < H1.DISTANCE OR H2.NBETOILES > H1.NBETOILES)
                   )
) HS,
    (SELECT MIN(AB.PRIX) MIP, MIN(AB.DISTANCE) MID, MAX(AB.NBETOILES) MINB
        FROM (SELECT IDH, PRIX* :WPRIX PRIX, DISTANCE* :WDISTANCE DISTANCE, NBETOILES* :WNBETOILES NBETOILES
          FROM HOTEL H1
          WHERE NOT EXISTS (SELECT *
            FROM HOTEL H2
            WHERE  (H2.PRIX <= H1.PRIX AND H2.DISTANCE <= H1.DISTANCE AND H2.NBETOILES >= H1.NBETOILES)
            AND (H2.PRIX < H1.PRIX OR H2.DISTANCE < H1.DISTANCE OR H2.NBETOILES > H1.NBETOILES)
            )
) AB

) VIP,
( SELECT MAX(CD.PRIX) MAP, MAX(CD.DISTANCE) MAD, MIN(CD.NBETOILES) MANB
    FROM (SELECT IDH, PRIX* :WPRIX PRIX, DISTANCE* :WDISTANCE DISTANCE, NBETOILES* :WNBETOILES NBETOILES
        FROM HOTEL H1
        WHERE NOT EXISTS (SELECT * FROM HOTEL H2
          WHERE  (H2.PRIX <= H1.PRIX AND H2.DISTANCE <= H1.DISTANCE AND H2.NBETOILES >= H1.NBETOILES)
          AND (H2.PRIX < H1.PRIX OR H2.DISTANCE < H1.DISTANCE OR H2.NBETOILES > H1.NBETOILES))
) CD

) VIN
) R ,
HOTEL H0
WHERE H0.IDH = R.IDH
ORDER BY SCORE DESC";

$stat = $db->prepare($sql);
$stat->bindParam(':WPRIX', $_POST["wp"]);
$stat->bindParam(':WDISTANCE', $_POST["wd"]);
$stat->bindParam(':WNBETOILES', $_POST["we"]);

$stat->execute();

$res_set = $stat->fetchAll(PDO::FETCH_ASSOC);


echo json_encode($res_set) ;

?>